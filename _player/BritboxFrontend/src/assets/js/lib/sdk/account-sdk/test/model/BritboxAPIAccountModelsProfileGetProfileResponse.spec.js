/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BritboxAccountApi10);
  }
}(this, function(expect, BritboxAccountApi10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BritboxAPIAccountModelsProfileGetProfileResponse', function() {
    it('should create an instance of BritboxAPIAccountModelsProfileGetProfileResponse', function() {
      // uncomment below and update the code to test BritboxAPIAccountModelsProfileGetProfileResponse
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be.a(BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse);
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property watched (base name: "watched")', function() {
      // uncomment below and update the code to test the property watched
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property watchedList (base name: "watchedList")', function() {
      // uncomment below and update the code to test the property watchedList
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property bookmarks (base name: "bookmarks")', function() {
      // uncomment below and update the code to test the property bookmarks
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property bookmarkList (base name: "bookmarkList")', function() {
      // uncomment below and update the code to test the property bookmarkList
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionStatus (base name: "subscriptionStatus")', function() {
      // uncomment below and update the code to test the property subscriptionStatus
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property isInFreeTrail (base name: "isInFreeTrail")', function() {
      // uncomment below and update the code to test the property isInFreeTrail
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property canStream (base name: "canStream")', function() {
      // uncomment below and update the code to test the property canStream
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property parentalControl (base name: "parentalControl")', function() {
      // uncomment below and update the code to test the property parentalControl
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

    it('should have the property messages (base name: "messages")', function() {
      // uncomment below and update the code to test the property messages
      //var instane = new BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse();
      //expect(instance).to.be();
    });

  });

}));
