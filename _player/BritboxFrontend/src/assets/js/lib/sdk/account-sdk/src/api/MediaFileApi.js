/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.BritboxAccountApi10) {
      root.BritboxAccountApi10 = {};
    }
    root.BritboxAccountApi10.MediaFileApi = factory(root.BritboxAccountApi10.ApiClient, root.BritboxAccountApi10.BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse);
  }
}(this, function(ApiClient, BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse) {
  'use strict';

  /**
   * MediaFile service.
   * @module api/MediaFileApi
   * @version 1.0
   */

  /**
   * Constructs a new MediaFileApi. 
   * @alias module:api/MediaFileApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getItemMediaFiles operation.
     * @callback module:api/MediaFileApi~getItemMediaFilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {String} opts.device 
     * @param {String} opts.sub 
     * @param {Array.<String>} opts.segments 
     * @param {Boolean} opts.useCustomId  (default to false)
     * @param {String} opts.pcToken 
     * @param {module:api/MediaFileApi~getItemMediaFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse}
     */
    this.getItemMediaFiles = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItemMediaFiles");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'device': opts['device'],
        'sub': opts['sub'],
        'useCustomId': opts['useCustomId'],
        'pcToken': opts['pcToken'],
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsMediaFileGetItemMediaFilesResponse;

      return this.apiClient.callApi(
        '/v1/account/MediaFile/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
