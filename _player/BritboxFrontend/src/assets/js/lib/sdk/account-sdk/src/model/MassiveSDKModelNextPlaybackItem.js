/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MassiveSDKModelItemDetail'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MassiveSDKModelItemDetail'));
  } else {
    // Browser globals (root is window)
    if (!root.BritboxAccountApi10) {
      root.BritboxAccountApi10 = {};
    }
    root.BritboxAccountApi10.MassiveSDKModelNextPlaybackItem = factory(root.BritboxAccountApi10.ApiClient, root.BritboxAccountApi10.MassiveSDKModelItemDetail);
  }
}(this, function(ApiClient, MassiveSDKModelItemDetail) {
  'use strict';




  /**
   * The MassiveSDKModelNextPlaybackItem model module.
   * @module model/MassiveSDKModelNextPlaybackItem
   * @version 1.0
   */

  /**
   * Constructs a new <code>MassiveSDKModelNextPlaybackItem</code>.
   * @alias module:model/MassiveSDKModelNextPlaybackItem
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>MassiveSDKModelNextPlaybackItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MassiveSDKModelNextPlaybackItem} obj Optional instance to populate.
   * @return {module:model/MassiveSDKModelNextPlaybackItem} The populated <code>MassiveSDKModelNextPlaybackItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('suggestionType')) {
        obj['suggestionType'] = ApiClient.convertToType(data['suggestionType'], 'String');
      }
      if (data.hasOwnProperty('sourceItemId')) {
        obj['sourceItemId'] = ApiClient.convertToType(data['sourceItemId'], 'String');
      }
      if (data.hasOwnProperty('firstWatchedDate')) {
        obj['firstWatchedDate'] = ApiClient.convertToType(data['firstWatchedDate'], 'Date');
      }
      if (data.hasOwnProperty('lastWatchedDate')) {
        obj['lastWatchedDate'] = ApiClient.convertToType(data['lastWatchedDate'], 'Date');
      }
      if (data.hasOwnProperty('next')) {
        obj['next'] = MassiveSDKModelItemDetail.constructFromObject(data['next']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/MassiveSDKModelNextPlaybackItem.SuggestionTypeEnum} suggestionType
   */
  exports.prototype['suggestionType'] = undefined;
  /**
   * @member {String} sourceItemId
   */
  exports.prototype['sourceItemId'] = undefined;
  /**
   * @member {Date} firstWatchedDate
   */
  exports.prototype['firstWatchedDate'] = undefined;
  /**
   * @member {Date} lastWatchedDate
   */
  exports.prototype['lastWatchedDate'] = undefined;
  /**
   * @member {module:model/MassiveSDKModelItemDetail} next
   */
  exports.prototype['next'] = undefined;


  /**
   * Allowed values for the <code>suggestionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SuggestionTypeEnum = {
    /**
     * value: "StartWatching"
     * @const
     */
    "StartWatching": "StartWatching",
    /**
     * value: "ContinueWatching"
     * @const
     */
    "ContinueWatching": "ContinueWatching",
    /**
     * value: "RestartWatching"
     * @const
     */
    "RestartWatching": "RestartWatching",
    /**
     * value: "Sequential"
     * @const
     */
    "Sequential": "Sequential",
    /**
     * value: "None"
     * @const
     */
    "None": "None"  };


  return exports;
}));


