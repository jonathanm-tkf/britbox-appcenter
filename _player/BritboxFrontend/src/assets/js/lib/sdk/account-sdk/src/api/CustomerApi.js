/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BritboxAPIAccountModelsCustomerAddSubscriptionRequest', 'model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse', 'model/BritboxAPIAccountModelsCustomerCreateUserV2Request', 'model/BritboxAPIAccountModelsCustomerGetProductsResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BritboxAPIAccountModelsCustomerAddSubscriptionRequest'), require('../model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse'), require('../model/BritboxAPIAccountModelsCustomerCreateUserV2Request'), require('../model/BritboxAPIAccountModelsCustomerGetProductsResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.BritboxAccountApi10) {
      root.BritboxAccountApi10 = {};
    }
    root.BritboxAccountApi10.CustomerApi = factory(root.BritboxAccountApi10.ApiClient, root.BritboxAccountApi10.BritboxAPIAccountModelsCustomerAddSubscriptionRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsCustomerAddSubscriptionResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsCustomerCreateUserV2Request, root.BritboxAccountApi10.BritboxAPIAccountModelsCustomerGetProductsResponse);
  }
}(this, function(ApiClient, BritboxAPIAccountModelsCustomerAddSubscriptionRequest, BritboxAPIAccountModelsCustomerAddSubscriptionResponse, BritboxAPIAccountModelsCustomerCreateUserV2Request, BritboxAPIAccountModelsCustomerGetProductsResponse) {
  'use strict';

  /**
   * Customer service.
   * @module api/CustomerApi
   * @version 1.0
   */

  /**
   * Constructs a new CustomerApi. 
   * @alias module:api/CustomerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addSubscription operation.
     * @callback module:api/CustomerApi~addSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsCustomerAddSubscriptionRequest} opts.request 
     * @param {module:api/CustomerApi~addSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse}
     */
    this.addSubscription = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsCustomerAddSubscriptionResponse;

      return this.apiClient.callApi(
        '/v1/account/Customer/subscription', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getProducts operation.
     * @callback module:api/CustomerApi~getProductsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsCustomerGetProductsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.dmaID 
     * @param {String} opts.countryCode 
     * @param {module:api/CustomerApi~getProductsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsCustomerGetProductsResponse}
     */
    this.getProducts = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'dmaID': opts['dmaID'],
        'countryCode': opts['countryCode'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsCustomerGetProductsResponse;

      return this.apiClient.callApi(
        '/v1/account/Customer/products', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the register operation.
     * @callback module:api/CustomerApi~registerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsCustomerCreateUserV2Request} opts.request 
     * @param {module:api/CustomerApi~registerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsCustomerAddSubscriptionResponse}
     */
    this.register = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsCustomerAddSubscriptionResponse;

      return this.apiClient.callApi(
        '/v1/account/Customer/register', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
