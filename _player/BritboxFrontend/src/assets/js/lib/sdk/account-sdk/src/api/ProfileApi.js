/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BritboxAPIAccountModelsProfileBookmarkItemResponse', 'model/BritboxAPIAccountModelsProfileCheckParentalControlResponse', 'model/BritboxAPIAccountModelsProfileDeleteWatchedRequest', 'model/BritboxAPIAccountModelsProfileGetBookmarkListResponse', 'model/BritboxAPIAccountModelsProfileGetBookmarksResponse', 'model/BritboxAPIAccountModelsProfileGetContinueWatchingListResponse', 'model/BritboxAPIAccountModelsProfileGetItemBookmarkResponse', 'model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse', 'model/BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse', 'model/BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse', 'model/BritboxAPIAccountModelsProfileGetProfileResponse', 'model/BritboxAPIAccountModelsProfileGetWatchedListResponse', 'model/BritboxAPIAccountModelsProfileGetWatchedResponse', 'model/BritboxAPIAccountModelsProfileResetPasswordRequest', 'model/BritboxAPIAccountModelsProfileResetPasswordResponse', 'model/BritboxAPIAccountModelsProfileSetItemWatchedStatusRequest', 'model/BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse', 'model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsRequest', 'model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse', 'model/BritboxAPIAccountModelsProfileUpdateProfileRequest', 'model/BritboxAPIAccountModelsProfileUpdateProfileResponse', 'model/BritboxAPIAccountModelsProfileValidateParentalControlPINRequest', 'model/BritboxAPIAccountModelsProfileValidateParentalControlPINResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BritboxAPIAccountModelsProfileBookmarkItemResponse'), require('../model/BritboxAPIAccountModelsProfileCheckParentalControlResponse'), require('../model/BritboxAPIAccountModelsProfileDeleteWatchedRequest'), require('../model/BritboxAPIAccountModelsProfileGetBookmarkListResponse'), require('../model/BritboxAPIAccountModelsProfileGetBookmarksResponse'), require('../model/BritboxAPIAccountModelsProfileGetContinueWatchingListResponse'), require('../model/BritboxAPIAccountModelsProfileGetItemBookmarkResponse'), require('../model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse'), require('../model/BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse'), require('../model/BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse'), require('../model/BritboxAPIAccountModelsProfileGetProfileResponse'), require('../model/BritboxAPIAccountModelsProfileGetWatchedListResponse'), require('../model/BritboxAPIAccountModelsProfileGetWatchedResponse'), require('../model/BritboxAPIAccountModelsProfileResetPasswordRequest'), require('../model/BritboxAPIAccountModelsProfileResetPasswordResponse'), require('../model/BritboxAPIAccountModelsProfileSetItemWatchedStatusRequest'), require('../model/BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse'), require('../model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsRequest'), require('../model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse'), require('../model/BritboxAPIAccountModelsProfileUpdateProfileRequest'), require('../model/BritboxAPIAccountModelsProfileUpdateProfileResponse'), require('../model/BritboxAPIAccountModelsProfileValidateParentalControlPINRequest'), require('../model/BritboxAPIAccountModelsProfileValidateParentalControlPINResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.BritboxAccountApi10) {
      root.BritboxAccountApi10 = {};
    }
    root.BritboxAccountApi10.ProfileApi = factory(root.BritboxAccountApi10.ApiClient, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileBookmarkItemResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileCheckParentalControlResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileDeleteWatchedRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetBookmarkListResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetBookmarksResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetContinueWatchingListResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetItemBookmarkResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetProfileResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetWatchedListResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileGetWatchedResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileResetPasswordRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileResetPasswordResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileSetItemWatchedStatusRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileUpdateParentalControlDetailsRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileUpdateProfileRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileUpdateProfileResponse, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileValidateParentalControlPINRequest, root.BritboxAccountApi10.BritboxAPIAccountModelsProfileValidateParentalControlPINResponse);
  }
}(this, function(ApiClient, BritboxAPIAccountModelsProfileBookmarkItemResponse, BritboxAPIAccountModelsProfileCheckParentalControlResponse, BritboxAPIAccountModelsProfileDeleteWatchedRequest, BritboxAPIAccountModelsProfileGetBookmarkListResponse, BritboxAPIAccountModelsProfileGetBookmarksResponse, BritboxAPIAccountModelsProfileGetContinueWatchingListResponse, BritboxAPIAccountModelsProfileGetItemBookmarkResponse, BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse, BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse, BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse, BritboxAPIAccountModelsProfileGetProfileResponse, BritboxAPIAccountModelsProfileGetWatchedListResponse, BritboxAPIAccountModelsProfileGetWatchedResponse, BritboxAPIAccountModelsProfileResetPasswordRequest, BritboxAPIAccountModelsProfileResetPasswordResponse, BritboxAPIAccountModelsProfileSetItemWatchedStatusRequest, BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse, BritboxAPIAccountModelsProfileUpdateParentalControlDetailsRequest, BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse, BritboxAPIAccountModelsProfileUpdateProfileRequest, BritboxAPIAccountModelsProfileUpdateProfileResponse, BritboxAPIAccountModelsProfileValidateParentalControlPINRequest, BritboxAPIAccountModelsProfileValidateParentalControlPINResponse) {
  'use strict';

  /**
   * Profile service.
   * @module api/ProfileApi
   * @version 1.0
   */

  /**
   * Constructs a new ProfileApi. 
   * @alias module:api/ProfileApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the bookmarkItem operation.
     * @callback module:api/ProfileApi~bookmarkItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileBookmarkItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~bookmarkItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileBookmarkItemResponse}
     */
    this.bookmarkItem = function(itemId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling bookmarkItem");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileBookmarkItemResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/bookmarks/{itemId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the checkParentalControl operation.
     * @callback module:api/ProfileApi~checkParentalControlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileCheckParentalControlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.classificationName 
     * @param {String} opts.segment 
     * @param {module:api/ProfileApi~checkParentalControlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileCheckParentalControlResponse}
     */
    this.checkParentalControl = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'classificationName': opts['classificationName'],
        'segment': opts['segment'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileCheckParentalControlResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/parentalcontrol/canstream', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteItemBookmark operation.
     * @callback module:api/ProfileApi~deleteItemBookmarkCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~deleteItemBookmarkCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteItemBookmark = function(itemId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling deleteItemBookmark");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/v1/account/Profile/bookmarks/{itemId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteWatched operation.
     * @callback module:api/ProfileApi~deleteWatchedCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileDeleteWatchedRequest} opts.request 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~deleteWatchedCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteWatched = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getBookmarkList operation.
     * @callback module:api/ProfileApi~getBookmarkListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetBookmarkListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {String} opts.order 
     * @param {String} opts.itemType 
     * @param {String} opts.device 
     * @param {String} opts.sub 
     * @param {Boolean} opts.useCustomId 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~getBookmarkListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetBookmarkListResponse}
     */
    this.getBookmarkList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'order': opts['order'],
        'itemType': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'useCustomId': opts['useCustomId'],
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetBookmarkListResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/bookmarks/list', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getBookmarks operation.
     * @callback module:api/ProfileApi~getBookmarksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetBookmarksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ProfileApi~getBookmarksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetBookmarksResponse}
     */
    this.getBookmarks = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetBookmarksResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/bookmarks', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getContinueWatchingList operation.
     * @callback module:api/ProfileApi~getContinueWatchingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {module:api/ProfileApi~getContinueWatchingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse}
     */
    this.getContinueWatchingList = function(itemId, callback) {
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getContinueWatchingList");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched/show/{itemId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getContinueWatchingList_0 operation.
     * @callback module:api/ProfileApi~getContinueWatchingList_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetContinueWatchingListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.showItemType 
     * @param {Array.<String>} opts.include 
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {String} opts.maxRating 
     * @param {String} opts.device 
     * @param {String} opts.sub 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~getContinueWatchingList_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetContinueWatchingListResponse}
     */
    this.getContinueWatchingList_0 = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'showItemType': opts['showItemType'],
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'maxRating': opts['maxRating'],
        'device': opts['device'],
        'sub': opts['sub'],
      };
      var collectionQueryParams = {
        'include': {
          value: opts['include'],
          collectionFormat: 'multi'
        },
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetContinueWatchingListResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/continue-watching/list', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemBookmark operation.
     * @callback module:api/ProfileApi~getItemBookmarkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetItemBookmarkResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {module:api/ProfileApi~getItemBookmarkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetItemBookmarkResponse}
     */
    this.getItemBookmark = function(itemId, callback) {
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getItemBookmark");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetItemBookmarkResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/bookmarks/{itemId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemWatchedStatus operation.
     * @callback module:api/ProfileApi~getItemWatchedStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {module:api/ProfileApi~getItemWatchedStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse}
     */
    this.getItemWatchedStatus = function(itemId, callback) {
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getItemWatchedStatus");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetItemWatchedStatusResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched/{itemId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNextPlaybackItem operation.
     * @callback module:api/ProfileApi~getNextPlaybackItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {Object} opts Optional parameters
     * @param {String} opts.maxRating 
     * @param {String} opts.expand 
     * @param {String} opts.device 
     * @param {String} opts.sub 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~getNextPlaybackItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse}
     */
    this.getNextPlaybackItem = function(itemId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getNextPlaybackItem");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
        'maxRating': opts['maxRating'],
        'expand': opts['expand'],
        'device': opts['device'],
        'sub': opts['sub'],
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetNextPlaybackItemResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/items/{itemId}/next', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getParentalControlDetails operation.
     * @callback module:api/ProfileApi~getParentalControlDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ProfileApi~getParentalControlDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse}
     */
    this.getParentalControlDetails = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetParentalControlDetailsResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/parentalcontrol', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getProfile operation.
     * @callback module:api/ProfileApi~getProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.useCustomId Show content item ids with BBC ids
     * @param {Array.<String>} opts.segments US, CA or AU
     * @param {module:api/ProfileApi~getProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetProfileResponse}
     */
    this.getProfile = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'useCustomId': opts['useCustomId'],
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetProfileResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getWatched operation.
     * @callback module:api/ProfileApi~getWatchedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetWatchedResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ProfileApi~getWatchedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetWatchedResponse}
     */
    this.getWatched = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetWatchedResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getWatchedList operation.
     * @callback module:api/ProfileApi~getWatchedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileGetWatchedListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {Boolean} opts.completed 
     * @param {String} opts.order 
     * @param {String} opts.orderBy 
     * @param {String} opts.itemType 
     * @param {String} opts.device 
     * @param {String} opts.sub 
     * @param {Boolean} opts.useCustomId 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~getWatchedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileGetWatchedListResponse}
     */
    this.getWatchedList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'completed': opts['completed'],
        'order': opts['order'],
        'orderBy': opts['orderBy'],
        'itemType': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'useCustomId': opts['useCustomId'],
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileGetWatchedListResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched/list', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the resetPassword operation.
     * @callback module:api/ProfileApi~resetPasswordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileResetPasswordResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileResetPasswordRequest} opts.request 
     * @param {module:api/ProfileApi~resetPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileResetPasswordResponse}
     */
    this.resetPassword = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileResetPasswordResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/resetPassword', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setItemWatchedStatus operation.
     * @callback module:api/ProfileApi~setItemWatchedStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} itemId 
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileSetItemWatchedStatusRequest} opts.request 
     * @param {Array.<String>} opts.segments 
     * @param {module:api/ProfileApi~setItemWatchedStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse}
     */
    this.setItemWatchedStatus = function(itemId, opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];

      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling setItemWatchedStatus");
      }


      var pathParams = {
        'itemId': itemId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'segments': {
          value: opts['segments'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileSetItemWatchedStatusResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/watched/{itemId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateParentalControlDetails operation.
     * @callback module:api/ProfileApi~updateParentalControlDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsRequest} opts.request 
     * @param {module:api/ProfileApi~updateParentalControlDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse}
     */
    this.updateParentalControlDetails = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileUpdateParentalControlDetailsResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/parentalcontrol', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateProfile operation.
     * @callback module:api/ProfileApi~updateProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileUpdateProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileUpdateProfileRequest} opts.request 
     * @param {module:api/ProfileApi~updateProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileUpdateProfileResponse}
     */
    this.updateProfile = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileUpdateProfileResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the validateParentalControlPIN operation.
     * @callback module:api/ProfileApi~validateParentalControlPINCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BritboxAPIAccountModelsProfileValidateParentalControlPINResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/BritboxAPIAccountModelsProfileValidateParentalControlPINRequest} opts.request 
     * @param {module:api/ProfileApi~validateParentalControlPINCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BritboxAPIAccountModelsProfileValidateParentalControlPINResponse}
     */
    this.validateParentalControlPIN = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['request'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AWSApiKeyAuth', 'JWToken'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = BritboxAPIAccountModelsProfileValidateParentalControlPINResponse;

      return this.apiClient.callApi(
        '/v1/account/Profile/parentalcontrol/validate', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
