/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BritboxAccountApi10);
  }
}(this, function(expect, BritboxAccountApi10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BritboxAccountApi10.ProfileApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProfileApi', function() {
    describe('bookmarkItem', function() {
      it('should call bookmarkItem successfully', function(done) {
        //uncomment below and update the code to test bookmarkItem
        //instance.bookmarkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkParentalControl', function() {
      it('should call checkParentalControl successfully', function(done) {
        //uncomment below and update the code to test checkParentalControl
        //instance.checkParentalControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItemBookmark', function() {
      it('should call deleteItemBookmark successfully', function(done) {
        //uncomment below and update the code to test deleteItemBookmark
        //instance.deleteItemBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWatched', function() {
      it('should call deleteWatched successfully', function(done) {
        //uncomment below and update the code to test deleteWatched
        //instance.deleteWatched(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBookmarkList', function() {
      it('should call getBookmarkList successfully', function(done) {
        //uncomment below and update the code to test getBookmarkList
        //instance.getBookmarkList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBookmarks', function() {
      it('should call getBookmarks successfully', function(done) {
        //uncomment below and update the code to test getBookmarks
        //instance.getBookmarks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContinueWatchingList', function() {
      it('should call getContinueWatchingList successfully', function(done) {
        //uncomment below and update the code to test getContinueWatchingList
        //instance.getContinueWatchingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContinueWatchingList_0', function() {
      it('should call getContinueWatchingList_0 successfully', function(done) {
        //uncomment below and update the code to test getContinueWatchingList_0
        //instance.getContinueWatchingList_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemBookmark', function() {
      it('should call getItemBookmark successfully', function(done) {
        //uncomment below and update the code to test getItemBookmark
        //instance.getItemBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemWatchedStatus', function() {
      it('should call getItemWatchedStatus successfully', function(done) {
        //uncomment below and update the code to test getItemWatchedStatus
        //instance.getItemWatchedStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNextPlaybackItem', function() {
      it('should call getNextPlaybackItem successfully', function(done) {
        //uncomment below and update the code to test getNextPlaybackItem
        //instance.getNextPlaybackItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParentalControlDetails', function() {
      it('should call getParentalControlDetails successfully', function(done) {
        //uncomment below and update the code to test getParentalControlDetails
        //instance.getParentalControlDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfile', function() {
      it('should call getProfile successfully', function(done) {
        //uncomment below and update the code to test getProfile
        //instance.getProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWatched', function() {
      it('should call getWatched successfully', function(done) {
        //uncomment below and update the code to test getWatched
        //instance.getWatched(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWatchedList', function() {
      it('should call getWatchedList successfully', function(done) {
        //uncomment below and update the code to test getWatchedList
        //instance.getWatchedList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetPassword', function() {
      it('should call resetPassword successfully', function(done) {
        //uncomment below and update the code to test resetPassword
        //instance.resetPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setItemWatchedStatus', function() {
      it('should call setItemWatchedStatus successfully', function(done) {
        //uncomment below and update the code to test setItemWatchedStatus
        //instance.setItemWatchedStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateParentalControlDetails', function() {
      it('should call updateParentalControlDetails successfully', function(done) {
        //uncomment below and update the code to test updateParentalControlDetails
        //instance.updateParentalControlDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfile', function() {
      it('should call updateProfile successfully', function(done) {
        //uncomment below and update the code to test updateProfile
        //instance.updateProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateParentalControlPIN', function() {
      it('should call validateParentalControlPIN successfully', function(done) {
        //uncomment below and update the code to test validateParentalControlPIN
        //instance.validateParentalControlPIN(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
