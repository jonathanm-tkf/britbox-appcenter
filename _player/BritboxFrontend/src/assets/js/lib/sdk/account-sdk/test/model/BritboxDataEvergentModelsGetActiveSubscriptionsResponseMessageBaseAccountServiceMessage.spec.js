/**
 * BRITBOX ACCOUNT API - 1.0
 * BRITBOX ACCOUNT API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BritboxAccountApi10);
  }
}(this, function(expect, BritboxAccountApi10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage', function() {
    it('should create an instance of BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage', function() {
      // uncomment below and update the code to test BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be.a(BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage);
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property retailPrice (base name: "retailPrice")', function() {
      // uncomment below and update the code to test the property retailPrice
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property orderID (base name: "orderID")', function() {
      // uncomment below and update the code to test the property orderID
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property serviceID (base name: "serviceID")', function() {
      // uncomment below and update the code to test the property serviceID
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property isRenewal (base name: "isRenewal")', function() {
      // uncomment below and update the code to test the property isRenewal
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property validityTill (base name: "validityTill")', function() {
      // uncomment below and update the code to test the property validityTill
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property isInFreeTrail (base name: "isInFreeTrail")', function() {
      // uncomment below and update the code to test the property isInFreeTrail
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property period (base name: "period")', function() {
      // uncomment below and update the code to test the property period
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property serviceName (base name: "serviceName")', function() {
      // uncomment below and update the code to test the property serviceName
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property validityPeriod (base name: "validityPeriod")', function() {
      // uncomment below and update the code to test the property validityPeriod
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionType (base name: "subscriptionType")', function() {
      // uncomment below and update the code to test the property subscriptionType
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property startDateInMillis (base name: "startDateInMillis")', function() {
      // uncomment below and update the code to test the property startDateInMillis
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

    it('should have the property promotions (base name: "promotions")', function() {
      // uncomment below and update the code to test the property promotions
      //var instane = new BritboxAccountApi10.BritboxDataEvergentModelsGetActiveSubscriptionsResponseMessageBaseAccountServiceMessage();
      //expect(instance).to.be();
    });

  });

}));
